name: Push to Artifact Registry and Deploy to GKE

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'kubernetes/**'
      - '.github/workflows/**'

env:
  WORKING_DIR: app/
  KUBERNETES_DIR: kubernetes/
  IMAGE_NAME: 'devops-app'
  PROJECT_ID: 'devops-project-448307'
  AR_REPO_LOCATION: 'europe-west4'
  AR_URL: 'europe-west4-docker.pkg.dev/devops-project-448307/devops-repo'
  GKE_CLUSTER: 'devops-cluster'
  GKE_REGION: 'europe-west4'
  NAMESPACE: 'devopsproject'

jobs:
  build_and_deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: 'true'
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_NAME }}
          service_account: ${{ secrets.GCP_WORKLOAD_IDENTITY_SA_EMAIL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for gcloud
        run: |-
          gcloud auth configure-docker ${{ env.AR_REPO_LOCATION }}-docker.pkg.dev

      - name: Build and Push Container
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.WORKING_DIR }}
          file: Dockerfile
          push: true
          tags: |
            ${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:latest

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gke-gcloud-auth-plugin'
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }} --project ${{ env.PROJECT_ID }}
          kubectl apply -n ${{ env.NAMESPACE }} -f ${{ env.WORKING_DIR }}kubernetes/deployment.yaml
          kubectl apply -n ${{ env.NAMESPACE }} -f ${{ env.WORKING_DIR }}kubernetes/service.yaml